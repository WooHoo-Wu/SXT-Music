/*
GET_HOME_SWIPER_URL {
  type: 资源类型,对应以下类型,默认为 0 即PC {
    0: pc
    1: android
    2: iphone
    3: ipad
  }
}
GET_NEW_MV_URL {
  area: 地区,可选值为全部,内地,港台,欧美,日本,韩国,不填则为全部
  limit: 取出数量 , 默认为 30
}
GET_RECOMMEND_SINGER {
  limit: 取出数量 , 默认为 50
  offset: 偏移数量 , 用于分页 , 如 :( 页数 -1)*50, 其中 50 为 limit 的值 , 默认 为 0
}
GET_AREA_NEW_MV {
  area: 地区,可选值为全部,内地,港台,欧美,日本,韩国,不填则为全部
  limit: 取出数量 , 默认为 30
}
GET_TOP_MUSIC {
  idx: 对象 key, 对应以下排行榜
      "0": 云音乐新歌榜,
      "1": 云音乐热歌榜,
      "2": 网易原创歌曲榜,
      "3": 云音乐飙升榜,
      "4": 云音乐电音榜,
      "5": UK排行榜周榜,
      "6": 美国Billboard周榜
      "7": KTV嗨榜,
      "8": iTunes榜,
      "9": Hit FM Top榜,
      "10": 日本Oricon周榜            // 日本
      "11": 韩国Melon排行榜周榜,
      "12": 韩国Mnet排行榜周榜,         // 韩国
      "13": 韩国Melon原声周榜,
      "14": 中国TOP排行榜(港台榜),    // 港台
      "15": 中国TOP排行榜(内地榜),    // 内地
      "16": 香港电台中文歌曲龙虎榜,
      "17": 华语金曲榜,
      "18": 中国嘻哈榜,
      "19": 法国 NRJ EuroHot 30周榜,
      "20": 台湾Hito排行榜,
      "21": Beatport全球电子舞曲榜,
      "22": 云音乐ACG音乐榜,
      "23": 云音乐说唱榜
      "24": 云音乐古典音乐榜
      "25": 云音乐电音榜
      "26": 抖音排行榜
      "27": 新声榜
      "28": 云音乐韩语榜
      "29": 英国Q杂志中文版周榜
      "30": 电竞音乐榜
      "31": 云音乐欧美热歌榜        // 欧美
      "32": 云音乐欧美新歌榜
      "33": 说唱TOP榜
}，
GET_TOP_MV {
  limit: 取出数量 , 默认为 30
  area: 地区,可选值为内地,港台,欧美,日本,韩国,不填则为全部
  offset: 偏移数量 , 用于分页 , 如 :( 页数 -1)*30, 其中 30 为 limit 的值 , 默认 为 0
},
GET_ARTIST_LIST {
  必选参数 :
    cat : 即 category Code,歌手类型,默认 1001,返回华语男歌手数据
  可选参数 :
    limit : 返回数量 , 默认为 30
    offset : 偏移数量，用于分页 , 如 : 如 :( 页数 -1)*30, 其中 30 为 limit 的值 , 默认为 0
    initial: 按首字母索引查找参数,如 /artist/list?cat=1001&initial=b 返回内容将以 name 字段开头为 b 或者拼音开头为 b 为顺序排列
    category Code {
      入驻歌手 5001
      华语男歌手 1001
      华语女歌手 1002
      华语组合/乐队 1003
      欧美男歌手 2001
      欧美女歌手 2002
      欧美组合/乐队 2003
      日本男歌手 6001
      日本女歌手 6002
      日本组合/乐队 6003
      韩国男歌手 7001
      韩国女歌手 7002
      韩国组合/乐队 7003
      其他男歌手 4001
      其他女歌手 4002
      其他组合/乐队 4003
    }
}
GET_MUSIC_SHEET {
  可选参数 :
    order: 可选值为 'new' 和 'hot', 分别对应最新和最热 , 默认为 'hot'
    cat:cat: tag, 比如 " 华语 "、" 古风 " 、" 欧美 "、" 流行 ", 默认为 "全部",可从歌单分类接口获取(/playlist/catlist)
 }
GET_MUSIC_SHEET_DETAIL {
  必选参数 :
    id : 歌单 id
  可选参数 :
    s : 歌单最近的 s 个收藏者
}
GET_MUSIC_DETAIL {
  必须参数 :
    ids: 音乐 id, 如 ids=347230
}
GET_MUSIC_LYRIC {
  必选参数 :
    id: 音乐 id
}
GET_ARTIST_DETAIL {
  必选参数 :
    id: 歌手 id, 可由搜索接口获得
}
GET_ARTIST_MV {
  必选参数 :
    id: 歌手 id, 可由搜索接口获得
}
GET_ARTIST_ALBUM {
  必选参数 :
    id: 歌手 id
  可选参数 :
    limit: 取出数量 , 默认为 50
    offset: 偏移数量 , 用于分页 , 如 :( 页数 -1)*50, 其中 50 为 limit 的值 , 默认 为 0
}
GET_ARTIST_SIMI {
  必选参数 :
    id: 歌手 id
}
GET_MV_DETAIL {
  必选参数 :
    mvid: mv id
}
GET_MV_URL {
  可选参数 :
    id: mv id
}
IS_ENABLE_MUSIC {
  必选参数 :
    id : 歌曲 id
  可选参数 :
    br: 码率,默认设置了 999000 即最大码率,如果要 320k 则可设置为 320000,其他类推
}
GET_MUSIC_URL {
  必选参数 :
    id : 音乐 id
  可选参数 :
    br: 码率,默认设置了 999000 即最大码率,如果要 320k 则可设置为 320000,其他类推
  调用例子 : /song/url?id=33894312 /song/url?id=405998841,33894312
}
GET_SEARCH_DETAIL {
  必选参数 :
    keywords : 关键词
  可选参数 :
    limit : 返回数量 , 默认为 30 offset : 偏移数量，用于分页 ,
            如 : 如 :( 页数 -1)*30, 其中 30 为 limit 的值 , 默认为 0
    type:   搜索类型；默认为 1 即单曲 ,
            取值意义 : 1: 单曲, 10: 专辑, 100: 歌手, 1000: 歌单, 1002: 用户,
            1004: MV, 1006: 歌词, 1009: 电台, 1014: 视频, 1018:综合
}
*/
